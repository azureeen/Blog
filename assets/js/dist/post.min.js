/*!
 * Chirpy v6.2.3 | Â© 2019 Cotes Chung | MIT Licensed | https://github.com/cotes2020/jekyll-theme-chirpy/
 */
<<<<<<< HEAD
!function(){"use strict";function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,i(n.key),n)}}function r(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function n(t,e,r){return(e=i(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return a(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}var l=$(".mode-toggle");var c=$("body"),s="sidebar-display",u=function(){function e(){t(this,e)}return r(e,null,[{key:"toggle",value:function(){!1===e.isExpanded?c.attr(s,""):c.removeAttr(s),e.isExpanded=!e.isExpanded}}]),e}();n(u,"isExpanded",!1);var f=$("#sidebar-trigger"),d=$("#search-trigger"),m=$("#search-cancel"),p=$("#main-wrapper>.container>.row"),g=$("#topbar-title"),h=$("search"),v=$("#search-result-wrapper"),b=$("#search-results"),y=$("#search-input"),w=$("#search-hints"),C=$("html,body"),k="loaded",S="unloaded",T="input-focus",A="d-flex",j=function(){function e(){t(this,e)}return r(e,null,[{key:"on",value:function(){e.offset=window.scrollY,C.scrollTop(0)}},{key:"off",value:function(){C.scrollTop(e.offset)}}]),e}();n(j,"offset",0),n(j,"resultVisible",!1);var E=function(){function e(){t(this,e)}return r(e,null,[{key:"on",value:function(){f.addClass(S),g.addClass(S),d.addClass(S),h.addClass(A),m.addClass(k)}},{key:"off",value:function(){m.removeClass(k),h.removeClass(A),f.removeClass(S),g.removeClass(S),d.removeClass(S)}}]),e}(),x=function(){function e(){t(this,e)}return r(e,null,[{key:"on",value:function(){j.resultVisible||(j.on(),v.removeClass(S),p.addClass(S),j.resultVisible=!0)}},{key:"off",value:function(){j.resultVisible&&(b.empty(),w.hasClass(S)&&w.removeClass(S),v.addClass(S),p.removeClass(S),j.off(),y.val(""),j.resultVisible=!1)}}]),e}();function I(){return m.hasClass(k)}$(".collapse");var M=".code-header>button",D="fas fa-check",O="timeout",F="data-title-succeed",P="data-bs-original-title",R=2e3;function q(t){if($(t)[0].hasAttribute(O)){var e=$(t).attr(O);if(Number(e)>Date.now())return!0}return!1}function N(t){$(t).attr(O,Date.now()+R)}function U(t){$(t).removeAttr(O)}var V=$(M).children().attr("class");var z="data-src",B="data-lqip",H={SHIMMER:"shimmer",BLUR:"blur"};function L(t){$(this).parent().removeClass(t)}function _(){this.complete&&(this.hasAttribute(B)?L.call(this,H.BLUR):L.call(this,H.SHIMMER))}function J(){var t=$(this),e=t.attr(z);t.attr("src",encodeURI(e)),t.removeAttr(z)}var Y,G,K=function(){function e(){t(this,e)}return r(e,null,[{key:"attrTimestamp",get:function(){return"data-ts"}},{key:"attrDateFormat",get:function(){return"data-df"}},{key:"locale",get:function(){return $("html").attr("lang").substring(0,2)}},{key:"getTimestamp",value:function(t){return Number(t.attr(e.attrTimestamp))}},{key:"getDateFormat",value:function(t){return t.attr(e.attrDateFormat)}}]),e}();0!==l.length&&l.off().on("click",(function(t){var e=$(t.target),r=e.prop("tagName")==="button".toUpperCase()?e:e.parent();modeToggle.flipMode(),r.trigger("blur")})),$("#sidebar-trigger").on("click",u.toggle),$("#mask").on("click",u.toggle),d.on("click",(function(){E.on(),x.on(),y.trigger("focus")})),m.on("click",(function(){E.off(),x.off()})),y.on("focus",(function(){h.addClass(T)})),y.on("focusout",(function(){h.removeClass(T)})),y.on("input",(function(){""===y.val()?I()?w.removeClass(S):x.off():(x.on(),I()&&w.addClass(S))})),function(){var t=$("article img");t.length&&t.on("load",_),$('article img[loading="lazy"]').each((function(){this.complete&&L.call(this,H.SHIMMER)}));var e=$("article img[".concat(B,'="true"]'));e.length&&e.each(J)}(),$(".popup")<=0||$(".popup").magnificPopup({type:"image",closeOnContentClick:!0,showCloseBtn:!1,zoom:{enabled:!0,duration:300,easing:"ease-in-out"}}),dayjs.locale(K.locale),dayjs.extend(window.dayjs_plugin_localizedFormat),$("[".concat(K.attrTimestamp,"]")).each((function(){var t=dayjs.unix(K.getTimestamp($(this))),e=t.format(K.getDateFormat($(this)));$(this).text(e),$(this).removeAttr(K.attrTimestamp),$(this).removeAttr(K.attrDateFormat);var r=$(this).attr("data-bs-toggle");if(void 0!==r&&"tooltip"===r){var n=t.format("llll");$(this).attr("data-bs-title",n),new bootstrap.Tooltip($(this))}})),function(){if($(M).length){var t=new ClipboardJS(M,{target:function(t){return t.parentNode.nextElementSibling.querySelector("code .rouge-code")}});o(document.querySelectorAll(M)).map((function(t){return new bootstrap.Tooltip(t,{placement:"left"})})),t.on("success",(function(t){t.clearSelection();var e=t.trigger;q(e)||(!function(t){$(t).children().attr("class",D)}(e),function(t){var e=$(t).attr(F);$(t).attr(P,e).tooltip("show")}(e),N(e),setTimeout((function(){!function(t){$(t).tooltip("hide").removeAttr(P)}(e),function(t){$(t).children().attr("class",V)}(e),U(e)}),R))}))}var e=$("#copy-link");e.on("click",(function(t){var e=$(t.target);q(e)||navigator.clipboard.writeText(window.location.href).then((function(){var t=e.attr(P),r=e.attr(F);e.attr(P,r).tooltip("show"),N(e),setTimeout((function(){e.attr(P,t),U(e)}),R)}))})),e.on("mouseleave",(function(t){$(t.target).tooltip("hide")}))}(),document.querySelector("main h2")&&tocbot.init({tocSelector:"#toc",contentSelector:".content",ignoreSelector:"[data-toc-skip]",headingSelector:"h2, h3, h4",orderedList:!1,scrollSmooth:!1}),Y=$(window),G=$("#back-to-top"),Y.on("scroll",(function(){Y.scrollTop()>50?G.fadeIn():G.fadeOut()})),G.on("click",(function(){Y.scrollTop(0)})),o(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function(t){return new bootstrap.Tooltip(t)}))}();
=======

(function () {
  'use strict';

  /**
   * Reference: https://bootsnipp.com/snippets/featured/link-to-top-page
   */

  function back2top() {
    var $window = $(window);
    var $btn = $('#back-to-top');
    $window.on('scroll', function () {
      if ($window.scrollTop() > 50) {
        $btn.fadeIn();
      } else {
        $btn.fadeOut();
      }
    });
    $btn.on('click', function () {
      $window.scrollTop(0);
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }

  /**
   * Initial Bootstrap Tooltip.
   */
  function loadTooptip() {
    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
  }

  function basic() {
    back2top();
    loadTooptip();
  }

  /**
   * Add listener for theme mode toggle
   */
  var $toggleElem = $('.mode-toggle');
  function modeWatcher() {
    if ($toggleElem.length === 0) {
      return;
    }
    $toggleElem.off().on('click', function (e) {
      var $target = $(e.target);
      var $btn = $target.prop('tagName') === 'button'.toUpperCase() ? $target : $target.parent();
      modeToggle.flipMode(); // modeToggle: `_includes/mode-toggle.html`
      $btn.trigger('blur'); // remove the clicking outline
    });
  }

  /**
   * Expand or close the sidebar in mobile screens.
   */

  var $body = $('body');
  var ATTR_DISPLAY = 'sidebar-display';
  var SidebarUtil = /*#__PURE__*/function () {
    function SidebarUtil() {
      _classCallCheck(this, SidebarUtil);
    }
    _createClass(SidebarUtil, null, [{
      key: "toggle",
      value: function toggle() {
        if (SidebarUtil.isExpanded === false) {
          $body.attr(ATTR_DISPLAY, '');
        } else {
          $body.removeAttr(ATTR_DISPLAY);
        }
        SidebarUtil.isExpanded = !SidebarUtil.isExpanded;
      }
    }]);
    return SidebarUtil;
  }();
  _defineProperty(SidebarUtil, "isExpanded", false);
  function sidebarExpand() {
    $('#sidebar-trigger').on('click', SidebarUtil.toggle);
    $('#mask').on('click', SidebarUtil.toggle);
  }

  function initSidebar() {
    modeWatcher();
    sidebarExpand();
  }

  /**
   * This script make #search-result-wrapper switch to unloaded or shown automatically.
   */
  var $btnSbTrigger = $('#sidebar-trigger');
  var $btnSearchTrigger = $('#search-trigger');
  var $btnCancel = $('#search-cancel');
  var $content = $('#main-wrapper>.container>.row');
  var $topbarTitle = $('#topbar-title');
  var $search = $('search');
  var $resultWrapper = $('#search-result-wrapper');
  var $results = $('#search-results');
  var $input = $('#search-input');
  var $hints = $('#search-hints');
  var $viewport = $('html,body');

  // class names
  var C_LOADED = 'loaded';
  var C_UNLOADED = 'unloaded';
  var C_FOCUS = 'input-focus';
  var C_FLEX = 'd-flex';
  var ScrollBlocker = /*#__PURE__*/function () {
    function ScrollBlocker() {
      _classCallCheck(this, ScrollBlocker);
    }
    _createClass(ScrollBlocker, null, [{
      key: "on",
      value: function on() {
        ScrollBlocker.offset = window.scrollY;
        $viewport.scrollTop(0);
      }
    }, {
      key: "off",
      value: function off() {
        $viewport.scrollTop(ScrollBlocker.offset);
      }
    }]);
    return ScrollBlocker;
  }();
  /*--- Actions in mobile screens (Sidebar hidden) ---*/
  _defineProperty(ScrollBlocker, "offset", 0);
  _defineProperty(ScrollBlocker, "resultVisible", false);
  var MobileSearchBar = /*#__PURE__*/function () {
    function MobileSearchBar() {
      _classCallCheck(this, MobileSearchBar);
    }
    _createClass(MobileSearchBar, null, [{
      key: "on",
      value: function on() {
        $btnSbTrigger.addClass(C_UNLOADED);
        $topbarTitle.addClass(C_UNLOADED);
        $btnSearchTrigger.addClass(C_UNLOADED);
        $search.addClass(C_FLEX);
        $btnCancel.addClass(C_LOADED);
      }
    }, {
      key: "off",
      value: function off() {
        $btnCancel.removeClass(C_LOADED);
        $search.removeClass(C_FLEX);
        $btnSbTrigger.removeClass(C_UNLOADED);
        $topbarTitle.removeClass(C_UNLOADED);
        $btnSearchTrigger.removeClass(C_UNLOADED);
      }
    }]);
    return MobileSearchBar;
  }();
  var ResultSwitch = /*#__PURE__*/function () {
    function ResultSwitch() {
      _classCallCheck(this, ResultSwitch);
    }
    _createClass(ResultSwitch, null, [{
      key: "on",
      value: function on() {
        if (!ScrollBlocker.resultVisible) {
          // the block method must be called before $(#main-wrapper>.container) unloaded.
          ScrollBlocker.on();
          $resultWrapper.removeClass(C_UNLOADED);
          $content.addClass(C_UNLOADED);
          ScrollBlocker.resultVisible = true;
        }
      }
    }, {
      key: "off",
      value: function off() {
        if (ScrollBlocker.resultVisible) {
          $results.empty();
          if ($hints.hasClass(C_UNLOADED)) {
            $hints.removeClass(C_UNLOADED);
          }
          $resultWrapper.addClass(C_UNLOADED);
          $content.removeClass(C_UNLOADED);

          // now the release method must be called after $(#main-wrapper>.container) display
          ScrollBlocker.off();
          $input.val('');
          ScrollBlocker.resultVisible = false;
        }
      }
    }]);
    return ResultSwitch;
  }();
  function isMobileView() {
    return $btnCancel.hasClass(C_LOADED);
  }
  function displaySearch() {
    $btnSearchTrigger.on('click', function () {
      MobileSearchBar.on();
      ResultSwitch.on();
      $input.trigger('focus');
    });
    $btnCancel.on('click', function () {
      MobileSearchBar.off();
      ResultSwitch.off();
    });
    $input.on('focus', function () {
      $search.addClass(C_FOCUS);
    });
    $input.on('focusout', function () {
      $search.removeClass(C_FOCUS);
    });
    $input.on('input', function () {
      if ($input.val() === '') {
        if (isMobileView()) {
          $hints.removeClass(C_UNLOADED);
        } else {
          ResultSwitch.off();
        }
      } else {
        ResultSwitch.on();
        if (isMobileView()) {
          $hints.addClass(C_UNLOADED);
        }
      }
    });
  }

  function initTopbar() {
    displaySearch();
  }

  /**
   * Tab 'Categories' expand/close effect.
   */
  $('.collapse');

  /**
   * Clipboard functions
   *
   * Dependencies:
   *   - popper.js (https://github.com/popperjs/popper-core)
   *   - clipboard.js (https://github.com/zenorocha/clipboard.js)
   */

  var clipboardSelector = '.code-header>button';
  var ICON_SUCCESS = 'fas fa-check';
  var ATTR_TIMEOUT = 'timeout';
  var ATTR_TITLE_SUCCEED = 'data-title-succeed';
  var ATTR_TITLE_ORIGIN = 'data-bs-original-title';
  var TIMEOUT = 2000; // in milliseconds

  function isLocked(node) {
    if ($(node)[0].hasAttribute(ATTR_TIMEOUT)) {
      var timeout = $(node).attr(ATTR_TIMEOUT);
      if (Number(timeout) > Date.now()) {
        return true;
      }
    }
    return false;
  }
  function lock(node) {
    $(node).attr(ATTR_TIMEOUT, Date.now() + TIMEOUT);
  }
  function unlock(node) {
    $(node).removeAttr(ATTR_TIMEOUT);
  }
  function getIcon(btn) {
    var iconNode = $(btn).children();
    return iconNode.attr('class');
  }
  var ICON_DEFAULT = getIcon(clipboardSelector);
  function showTooltip(btn) {
    var succeedTitle = $(btn).attr(ATTR_TITLE_SUCCEED);
    $(btn).attr(ATTR_TITLE_ORIGIN, succeedTitle).tooltip('show');
  }
  function hideTooltip(btn) {
    $(btn).tooltip('hide').removeAttr(ATTR_TITLE_ORIGIN);
  }
  function setSuccessIcon(btn) {
    var btnNode = $(btn);
    var iconNode = btnNode.children();
    iconNode.attr('class', ICON_SUCCESS);
  }
  function resumeIcon(btn) {
    var btnNode = $(btn);
    var iconNode = btnNode.children();
    iconNode.attr('class', ICON_DEFAULT);
  }
  function initClipboard() {
    // Initial the clipboard.js object
    if ($(clipboardSelector).length) {
      var clipboard = new ClipboardJS(clipboardSelector, {
        target: function target(trigger) {
          var codeBlock = trigger.parentNode.nextElementSibling;
          return codeBlock.querySelector('code .rouge-code');
        }
      });
      var clipboardList = document.querySelectorAll(clipboardSelector);
      _toConsumableArray(clipboardList).map(function (elem) {
        return new bootstrap.Tooltip(elem, {
          placement: 'left'
        });
      });
      clipboard.on('success', function (e) {
        e.clearSelection();
        var trigger = e.trigger;
        if (isLocked(trigger)) {
          return;
        }
        setSuccessIcon(trigger);
        showTooltip(trigger);
        lock(trigger);
        setTimeout(function () {
          hideTooltip(trigger);
          resumeIcon(trigger);
          unlock(trigger);
        }, TIMEOUT);
      });
    }

    /* --- Post link sharing --- */

    var btnCopyLink = $('#copy-link');
    btnCopyLink.on('click', function (e) {
      var target = $(e.target);
      if (isLocked(target)) {
        return;
      }

      // Copy URL to clipboard
      navigator.clipboard.writeText(window.location.href).then(function () {
        var defaultTitle = target.attr(ATTR_TITLE_ORIGIN);
        var succeedTitle = target.attr(ATTR_TITLE_SUCCEED);
        // Switch tooltip title
        target.attr(ATTR_TITLE_ORIGIN, succeedTitle).tooltip('show');
        lock(target);
        setTimeout(function () {
          target.attr(ATTR_TITLE_ORIGIN, defaultTitle);
          unlock(target);
        }, TIMEOUT);
      });
    });
    btnCopyLink.on('mouseleave', function (e) {
      var target = $(e.target);
      target.tooltip('hide');
    });
  }

  /**
   * Setting up image lazy loading and LQIP switching
   */

  var ATTR_DATA_SRC = 'data-src';
  var ATTR_DATA_LQIP = 'data-lqip';
  var cover = {
    SHIMMER: 'shimmer',
    BLUR: 'blur'
  };
  function removeCover(clzss) {
    $(this).parent().removeClass(clzss);
  }
  function handleImage() {
    if (!this.complete) {
      return;
    }
    if (this.hasAttribute(ATTR_DATA_LQIP)) {
      removeCover.call(this, cover.BLUR);
    } else {
      removeCover.call(this, cover.SHIMMER);
    }
  }

  /**
   * Switches the LQIP with the real image URL.
   */
  function switchLQIP() {
    var $img = $(this);
    var src = $img.attr(ATTR_DATA_SRC);
    $img.attr('src', encodeURI(src));
    $img.removeAttr(ATTR_DATA_SRC);
  }
  function loadImg() {
    var $images = $('article img');
    if ($images.length) {
      $images.on('load', handleImage);
    }

    // Images loaded from the browser cache do not trigger the 'load' event
    $('article img[loading="lazy"]').each(function () {
      if (this.complete) {
        removeCover.call(this, cover.SHIMMER);
      }
    });

    // LQIPs set by the data URI or WebP will not trigger the 'load' event,
    // so manually convert the URI to the URL of a high-resolution image.
    var $lqips = $("article img[".concat(ATTR_DATA_LQIP, "=\"true\"]"));
    if ($lqips.length) {
      $lqips.each(switchLQIP);
    }
  }

  /**
   * Set up image popup
   *
   * See: https://github.com/dimsemenov/Magnific-Popup
   */

  function imgPopup() {
    if ($('.popup') <= 0) {
      return;
    }
    $('.popup').magnificPopup({
      type: 'image',
      closeOnContentClick: true,
      showCloseBtn: false,
      zoom: {
        enabled: true,
        duration: 300,
        easing: 'ease-in-out'
      }
    });
  }

  /**
   * Update month/day to locale datetime
   *
   * Requirement: <https://github.com/iamkun/dayjs>
   */
  /* A tool for locale datetime */
  var LocaleHelper = /*#__PURE__*/function () {
    function LocaleHelper() {
      _classCallCheck(this, LocaleHelper);
    }
    _createClass(LocaleHelper, null, [{
      key: "attrTimestamp",
      get: function get() {
        return 'data-ts';
      }
    }, {
      key: "attrDateFormat",
      get: function get() {
        return 'data-df';
      }
    }, {
      key: "locale",
      get: function get() {
        return $('html').attr('lang').substring(0, 2);
      }
    }, {
      key: "getTimestamp",
      value: function getTimestamp(elem) {
        return Number(elem.attr(LocaleHelper.attrTimestamp)); // unix timestamp
      }
    }, {
      key: "getDateFormat",
      value: function getDateFormat(elem) {
        return elem.attr(LocaleHelper.attrDateFormat);
      }
    }]);
    return LocaleHelper;
  }();
  function initLocaleDatetime() {
    dayjs.locale(LocaleHelper.locale);
    dayjs.extend(window.dayjs_plugin_localizedFormat);
    $("[".concat(LocaleHelper.attrTimestamp, "]")).each(function () {
      var date = dayjs.unix(LocaleHelper.getTimestamp($(this)));
      var text = date.format(LocaleHelper.getDateFormat($(this)));
      $(this).text(text);
      $(this).removeAttr(LocaleHelper.attrTimestamp);
      $(this).removeAttr(LocaleHelper.attrDateFormat);

      // setup tooltips
      var tooltip = $(this).attr('data-bs-toggle');
      if (typeof tooltip === 'undefined' || tooltip !== 'tooltip') {
        return;
      }
      var tooltipText = date.format('llll'); // see: https://day.js.org/docs/en/display/format#list-of-localized-formats
      $(this).attr('data-bs-title', tooltipText);
      new bootstrap.Tooltip($(this));
    });
  }

  function toc() {
    if (document.querySelector('main h2')) {
      // see: https://github.com/tscanlin/tocbot#usage
      tocbot.init({
        tocSelector: '#toc',
        contentSelector: '.content',
        ignoreSelector: '[data-toc-skip]',
        headingSelector: 'h2, h3, h4',
        orderedList: false,
        scrollSmooth: false
      });
    }
  }

  initSidebar();
  initTopbar();
  loadImg();
  imgPopup();
  initLocaleDatetime();
  initClipboard();
  toc();
  basic();

})();
//# sourceMappingURL=post.min.js.map
>>>>>>> 52c28507a101023fd0a1662b73e5652e856ed87d
