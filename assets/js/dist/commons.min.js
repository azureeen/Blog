/*!
 * Chirpy v6.2.3 | Â© 2019 Cotes Chung | MIT Licensed | https://github.com/cotes2020/jekyll-theme-chirpy/
 */
<<<<<<< HEAD
!function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,i(n.key),n)}}function r(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function n(e,t,r){return(t=i(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return a(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}var l=$(".mode-toggle");var s=$("body"),u="sidebar-display",c=function(){function t(){e(this,t)}return r(t,null,[{key:"toggle",value:function(){!1===t.isExpanded?s.attr(u,""):s.removeAttr(u),t.isExpanded=!t.isExpanded}}]),t}();n(c,"isExpanded",!1);var f=$("#sidebar-trigger"),d=$("#search-trigger"),p=$("#search-cancel"),b=$("#main-wrapper>.container>.row"),m=$("#topbar-title"),v=$("search"),y=$("#search-result-wrapper"),g=$("#search-results"),h=$("#search-input"),C=$("#search-hints"),w=$("html,body"),k="loaded",A="unloaded",S="input-focus",T="d-flex",j=function(){function t(){e(this,t)}return r(t,null,[{key:"on",value:function(){t.offset=window.scrollY,w.scrollTop(0)}},{key:"off",value:function(){w.scrollTop(t.offset)}}]),t}();n(j,"offset",0),n(j,"resultVisible",!1);var E,O,x=function(){function t(){e(this,t)}return r(t,null,[{key:"on",value:function(){f.addClass(A),m.addClass(A),d.addClass(A),v.addClass(T),p.addClass(k)}},{key:"off",value:function(){p.removeClass(k),v.removeClass(T),f.removeClass(A),m.removeClass(A),d.removeClass(A)}}]),t}(),P=function(){function t(){e(this,t)}return r(t,null,[{key:"on",value:function(){j.resultVisible||(j.on(),y.removeClass(A),b.addClass(A),j.resultVisible=!0)}},{key:"off",value:function(){j.resultVisible&&(g.empty(),C.hasClass(A)&&C.removeClass(A),y.addClass(A),b.removeClass(A),j.off(),h.val(""),j.resultVisible=!1)}}]),t}();function V(){return p.hasClass(k)}E=$(window),O=$("#back-to-top"),E.on("scroll",(function(){E.scrollTop()>50?O.fadeIn():O.fadeOut()})),O.on("click",(function(){E.scrollTop(0)})),o(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function(e){return new bootstrap.Tooltip(e)})),0!==l.length&&l.off().on("click",(function(e){var t=$(e.target),r=t.prop("tagName")==="button".toUpperCase()?t:t.parent();modeToggle.flipMode(),r.trigger("blur")})),$("#sidebar-trigger").on("click",c.toggle),$("#mask").on("click",c.toggle),d.on("click",(function(){x.on(),P.on(),h.trigger("focus")})),p.on("click",(function(){x.off(),P.off()})),h.on("focus",(function(){v.addClass(S)})),h.on("focusout",(function(){v.removeClass(S)})),h.on("input",(function(){""===h.val()?V()?C.removeClass(A):P.off():(P.on(),V()&&C.addClass(A))}))}();
=======

(function () {
  'use strict';

  /**
   * Reference: https://bootsnipp.com/snippets/featured/link-to-top-page
   */

  function back2top() {
    var $window = $(window);
    var $btn = $('#back-to-top');
    $window.on('scroll', function () {
      if ($window.scrollTop() > 50) {
        $btn.fadeIn();
      } else {
        $btn.fadeOut();
      }
    });
    $btn.on('click', function () {
      $window.scrollTop(0);
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }

  /**
   * Initial Bootstrap Tooltip.
   */
  function loadTooptip() {
    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
  }

  function basic() {
    back2top();
    loadTooptip();
  }

  /**
   * Add listener for theme mode toggle
   */
  var $toggleElem = $('.mode-toggle');
  function modeWatcher() {
    if ($toggleElem.length === 0) {
      return;
    }
    $toggleElem.off().on('click', function (e) {
      var $target = $(e.target);
      var $btn = $target.prop('tagName') === 'button'.toUpperCase() ? $target : $target.parent();
      modeToggle.flipMode(); // modeToggle: `_includes/mode-toggle.html`
      $btn.trigger('blur'); // remove the clicking outline
    });
  }

  /**
   * Expand or close the sidebar in mobile screens.
   */

  var $body = $('body');
  var ATTR_DISPLAY = 'sidebar-display';
  var SidebarUtil = /*#__PURE__*/function () {
    function SidebarUtil() {
      _classCallCheck(this, SidebarUtil);
    }
    _createClass(SidebarUtil, null, [{
      key: "toggle",
      value: function toggle() {
        if (SidebarUtil.isExpanded === false) {
          $body.attr(ATTR_DISPLAY, '');
        } else {
          $body.removeAttr(ATTR_DISPLAY);
        }
        SidebarUtil.isExpanded = !SidebarUtil.isExpanded;
      }
    }]);
    return SidebarUtil;
  }();
  _defineProperty(SidebarUtil, "isExpanded", false);
  function sidebarExpand() {
    $('#sidebar-trigger').on('click', SidebarUtil.toggle);
    $('#mask').on('click', SidebarUtil.toggle);
  }

  function initSidebar() {
    modeWatcher();
    sidebarExpand();
  }

  /**
   * This script make #search-result-wrapper switch to unloaded or shown automatically.
   */
  var $btnSbTrigger = $('#sidebar-trigger');
  var $btnSearchTrigger = $('#search-trigger');
  var $btnCancel = $('#search-cancel');
  var $content = $('#main-wrapper>.container>.row');
  var $topbarTitle = $('#topbar-title');
  var $search = $('search');
  var $resultWrapper = $('#search-result-wrapper');
  var $results = $('#search-results');
  var $input = $('#search-input');
  var $hints = $('#search-hints');
  var $viewport = $('html,body');

  // class names
  var C_LOADED = 'loaded';
  var C_UNLOADED = 'unloaded';
  var C_FOCUS = 'input-focus';
  var C_FLEX = 'd-flex';
  var ScrollBlocker = /*#__PURE__*/function () {
    function ScrollBlocker() {
      _classCallCheck(this, ScrollBlocker);
    }
    _createClass(ScrollBlocker, null, [{
      key: "on",
      value: function on() {
        ScrollBlocker.offset = window.scrollY;
        $viewport.scrollTop(0);
      }
    }, {
      key: "off",
      value: function off() {
        $viewport.scrollTop(ScrollBlocker.offset);
      }
    }]);
    return ScrollBlocker;
  }();
  /*--- Actions in mobile screens (Sidebar hidden) ---*/
  _defineProperty(ScrollBlocker, "offset", 0);
  _defineProperty(ScrollBlocker, "resultVisible", false);
  var MobileSearchBar = /*#__PURE__*/function () {
    function MobileSearchBar() {
      _classCallCheck(this, MobileSearchBar);
    }
    _createClass(MobileSearchBar, null, [{
      key: "on",
      value: function on() {
        $btnSbTrigger.addClass(C_UNLOADED);
        $topbarTitle.addClass(C_UNLOADED);
        $btnSearchTrigger.addClass(C_UNLOADED);
        $search.addClass(C_FLEX);
        $btnCancel.addClass(C_LOADED);
      }
    }, {
      key: "off",
      value: function off() {
        $btnCancel.removeClass(C_LOADED);
        $search.removeClass(C_FLEX);
        $btnSbTrigger.removeClass(C_UNLOADED);
        $topbarTitle.removeClass(C_UNLOADED);
        $btnSearchTrigger.removeClass(C_UNLOADED);
      }
    }]);
    return MobileSearchBar;
  }();
  var ResultSwitch = /*#__PURE__*/function () {
    function ResultSwitch() {
      _classCallCheck(this, ResultSwitch);
    }
    _createClass(ResultSwitch, null, [{
      key: "on",
      value: function on() {
        if (!ScrollBlocker.resultVisible) {
          // the block method must be called before $(#main-wrapper>.container) unloaded.
          ScrollBlocker.on();
          $resultWrapper.removeClass(C_UNLOADED);
          $content.addClass(C_UNLOADED);
          ScrollBlocker.resultVisible = true;
        }
      }
    }, {
      key: "off",
      value: function off() {
        if (ScrollBlocker.resultVisible) {
          $results.empty();
          if ($hints.hasClass(C_UNLOADED)) {
            $hints.removeClass(C_UNLOADED);
          }
          $resultWrapper.addClass(C_UNLOADED);
          $content.removeClass(C_UNLOADED);

          // now the release method must be called after $(#main-wrapper>.container) display
          ScrollBlocker.off();
          $input.val('');
          ScrollBlocker.resultVisible = false;
        }
      }
    }]);
    return ResultSwitch;
  }();
  function isMobileView() {
    return $btnCancel.hasClass(C_LOADED);
  }
  function displaySearch() {
    $btnSearchTrigger.on('click', function () {
      MobileSearchBar.on();
      ResultSwitch.on();
      $input.trigger('focus');
    });
    $btnCancel.on('click', function () {
      MobileSearchBar.off();
      ResultSwitch.off();
    });
    $input.on('focus', function () {
      $search.addClass(C_FOCUS);
    });
    $input.on('focusout', function () {
      $search.removeClass(C_FOCUS);
    });
    $input.on('input', function () {
      if ($input.val() === '') {
        if (isMobileView()) {
          $hints.removeClass(C_UNLOADED);
        } else {
          ResultSwitch.off();
        }
      } else {
        ResultSwitch.on();
        if (isMobileView()) {
          $hints.addClass(C_UNLOADED);
        }
      }
    });
  }

  function initTopbar() {
    displaySearch();
  }

  basic();
  initSidebar();
  initTopbar();

})();
//# sourceMappingURL=commons.min.js.map
>>>>>>> 52c28507a101023fd0a1662b73e5652e856ed87d
